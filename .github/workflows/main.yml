name: Build and Publish Docker Image

on:
  push:
    branches:
      - main

jobs:
  build-and-publish:
    name: Build and Publish Docker Image
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Log in to the GitHub Container Registry
      - name: Log in to GitHub Packages
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build the Docker image
      - name: Build Docker Image
        run: |
          docker build -t ghcr.io/samada58/${{ github.event.repository.name }}:latest .

      # Retry downloading the Trivy vulnerability database with a delay
      - name: Retry downloading Trivy vulnerability database
        run: |
          attempts=5
          delay=30 # Delay in seconds between each attempt
          for ((i=1; i<=attempts; i++)); do
            echo "Attempt $i of $attempts to download the Trivy vulnerability database..."
            curl -sfL https://github.com/aquasecurity/trivy-db/releases/download/v1-2023020812/trivy-light-offline.db.tgz -o trivy-db.tgz
            if [ $? -eq 0 ]; then
              echo "Download succeeded."
              mkdir -p ~/.trivy/db
              tar -zxvf trivy-db.tgz -C ~/.trivy/db && break
            else
              echo "Download failed, retrying in $delay seconds..."
              if [ $i -lt $attempts ]; then
                sleep $delay
              else
                echo "Failed to download the vulnerability database after $attempts attempts."
                exit 1
              fi
            fi
          done

      # Scan Docker Image with Trivy (with cache)
      - name: Scan Docker Image for vulnerabilities
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: ghcr.io/samada58/${{ github.event.repository.name }}:latest
          format: 'table'
          cache-dir: ~/.trivy/db # Enable caching
          exit-code: '0'  # Don't fail the build on vulnerabilities, but list them
          severity: 'HIGH,CRITICAL' # Set the severity levels you care about

      # Push the Docker image to GitHub Packages
      - name: Push Docker Image to GitHub Packages
        run: |
          docker push ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:latest
